services:
  website:
    build:
      context: ./website
      dockerfile: dockerfile
    container_name: alouter-website
    ports:
      - "8080:8080"
    environment:
      - MONGO_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
    volumes:
      - ./nfs:/app/assets/router_logs
    networks:
      - alouter-network
    depends_on:
      - mongo

  mongo:
    image: mongo:latest
    container_name: alouter-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - alouter-network
  
  scheduler:
    build:
      context: ./scheduler
      dockerfile: dockerfile
    container_name: alouter-scheduler
    networks:
      - alouter-network

  worker:
    build:
      context: ./worker
      dockerfile: dockerfile
    container_name: alouter-worker
    volumes:
      - ./nfs:/worker/router_logs
    networks:
      - alouter-network

volumes:
  mongo-data:

networks:
  alouter-network: